snippet inc
#include <${1}>
endsnippet
snippet incl
#include "${1}"
endsnippet
snippet #if
#if ${1}
#endif  // $1
endsnippet
snippet if
if (${1:true}) {
	${2}
}
endsnippet
snippet else
else {
	${1}
}
endsnippet
snippet while
while (${1:true}) {
	${2}
}
endsnippet
snippet for
for (${1}) {
	${2}
}
endsnippet
snippet switch
switch (${1}) {
	${2}
}
endsnippet
snippet case
case ${1}:
{
	${2}
	break;
}
endsnippet
snippet default
default:
{
	${1}
	break;
}
endsnippet
snippet class
class ${1:name} {
	public:
	${2}
	private:
};
endsnippet
snippet struct
struct ${1:name} {
	${2}
};
endsnippet
snippet namespace
namespace ${1:name} {
${2}
}  // namespace $1
endsnippet
snippet once
#ifndef ${1:tag}
#define $1

${2}

#endif  // $1
endsnippet
snippet todo
// TODO(jakob): ${1}
endsnippet
snippet note
// NOTE(jakob): ${1}
endsnippet
snippet classcomment
// ------------------------------- PUBLIC --------------------------------------
// ---------------------------- CONSTRUCTORS
// ----------------------------- DESTRUCTOR
// ------------------------------- METHODS
// -------------------------- GETTER AND SETTER
// ------------------------------- PRIVATE -------------------------------------
endsnippet
snippet (
(${VISUAL}
endsnippet
snippet "
"${VISUAL}
endsnippet
snippet '
'${VISUAL}
endsnippet
snippet {
{${VISUAL}
endsnippet
snippet [
[${VISUAL}
endsnippet
snippet <
<${VISUAL}
endsnippet
snippet ##
// ------------------------ 
endsnippet
